/* --------------------------------------- */
/*                                         */
/*                 V.1.3.2                 */
/*                                         */
/* --------------------------------------- */

/* INSPIRED BY KNACSS.CSS GRID SYSTEM      */
/* https://www.knacss.com/doc.html#grids   */

/* ------------------------ */
/*       Breakpoints        */
/* ------------------------ */
$medium: 768px !default;
$large: 1024px !default;

/* ------------------------ */
/*         Columns          */
/* ------------------------ */
$cols: 6;
$cols-tablet: 4;
$cols-mobile: 2;
$iefix: .01px;
$gutter: ("": 1rem, "-s": .5rem, "-l": 2rem, "-xl": 4rem) !global;

[class*=" grid-"], [class^="grid-"] {
    /* autoprefixer: off */
    display: grid;

    grid-auto-flow: dense;

    @each $affix,
    $size in $gutter {
        &.gutter#{$affix} {
            margin: -($size / 2);

            grid-gap: $size;
            & > * {
                border-width: ($size / 2);
            }
        }

        &.col-gutter#{$affix} {
            margin: 0 -($size / 2);

            grid-column-gap: $size;
            & > * {
                border-width: 0 ($size / 2);
            }
        }
    }

    &[class*="gutter"] {
        @supports (grid-area: auto) {
            margin: auto;
        }

         > * {
            box-sizing: border-box;
            border-style: solid;
            border-color: rgba(255, 255, 255, 0);
            background-clip: padding-box;

            @supports (grid-area: auto) {
                border: none;
            }
        }
    }
}

@for $i from 2 through $cols {
    [class*="grid-#{$i}"] {
        grid-template-columns: repeat(#{$i}, 1fr);

        & > * {
            float: left;
            width: calc(100% / #{$i} - #{$iefix});
            vertical-align: top;
        }

        @for $col-i from 1 through $i {
            & > [class*="col-#{$col-i}"] {
                width: calc((100% / #{$i} * #{$col-i}) - #{$iefix});
            }
        }
    }
}

@media (min-width: $large) {
    @for $i from 1 through $cols {
        [class*="col-#{$i}"] {
            grid-column: auto / span #{$i};
        }
    }
}

/* ------------------------ */
/*          Tablet          */
/* ------------------------ */
@media (min-width: $medium) and (max-width: ($large - 1)) {
    @for $i from 1 through $cols-tablet {
        [class*="grid-"][class*="-medium-#{$i}"] {
            grid-template-columns: repeat(#{$i}, 1fr);

            & > * {
                float: left;
                width: calc(100% / #{$i} - #{$iefix});
                vertical-align: top;
            }

            @for $col-i from 1 through $i {
                & > [class*="col-"][class*="-medium-#{$col-i}"] {
                    width: calc((100% / #{$i} * #{$col-i}) - #{$iefix});

                    grid-column: auto / span #{$col-i};
                }
            }
        }
    }
}

/* ------------------------ */
/*          Mobile          */
/* ------------------------ */
@media (max-width: ($medium - 1)) {
    @for $i from 1 through $cols-mobile {
        [class*="grid-"][class*="-small-#{$i}"] {
            grid-template-columns: repeat(#{$i}, 1fr);

            & > * {
                float: left;
                width: calc(100% / #{$i} - #{$iefix});
                vertical-align: top;
            }

            @for $col-i from 2 through $i {
                & > [class*="col-"][class*="-small-#{$col-i}"] {
                    width: calc((100% / #{$i} * #{$col-i}) - #{$iefix});

                    grid-column: auto / span #{$col-i};
                }
            }
        }
    }
}

/* Reset width for modern browsers */
[class*="col-"], [class*="grid-"] > * {
    @supports (grid-area: auto) {
        width: auto !important;
    }
}

.item-first {
    order: -1;
}

.item-last {
    order: 1;
}

.col-all {
    grid-column: 1 / -1;
}

.vcenter {
    align-items: center;
}